/*
|***************************************************************************
|
| Copyright (c) [2012] Novell, Inc.
| All Rights Reserved.
|
| This program is free software; you can redistribute it and/or
| modify it under the terms of version 2 of the GNU General Public License as
| published by the Free Software Foundation.
|
| This program is distributed in the hope that it will be useful,
| but WITHOUT ANY WARRANTY; without even the implied warranty of
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
| GNU General Public License for more details.
|
| You should have received a copy of the GNU General Public License
| along with this program; if not, contact Novell, Inc.
|
| To contact Novell about this file by physical or electronic mail,
| you may find current contact information at www.novell.com
|
|***************************************************************************
*/
/**
 * File:	include/iscsi-lio-server/complex.ycp
 * Package:	Configuration of iscsi-lio-server
 * Summary:	Dialogs definitions
 * Authors:	Thomas Fehr <fehr@suse.de>
 *
 * $Id$
 */

{

textdomain "iscsi-lio-server";

import "Label";
import "Popup";
import "Wizard";
import "IscsiLioServer";

include "iscsi-lio-server/helps.ycp";

/**
 * Return a modification status
 * @return true if data was modified
 */
boolean Modified() {
    return IscsiLioServer::Modified();
}

boolean ReallyAbort() {
    return !IscsiLioServer::Modified() || Popup::ReallyAbort(true);
}

boolean PollAbort() {
    return UI::PollInput() == `abort;
}

/**
 * Read settings dialog
 * @return `abort if aborted and `next otherwise
 */
symbol ReadDialog() {
    Wizard::RestoreHelp(HELPS["read"]:"");
    // IscsiLioServer::AbortFunction = PollAbort;
    boolean ret = IscsiLioServer::Read();
    return ret ? `next : `abort;
}

/**
 * Write settings dialog
 * @return `abort if aborted and `next otherwise
 */
symbol WriteDialog() {
    y2milestone( "WriteDialog" );
    Wizard::RestoreHelp(HELPS["write"]:"");
    // IscsiLioServer::AbortFunction = PollAbort;
    boolean ret = IscsiLioServer::Write();
    return ret ? `next : `abort;
}



/* EOF */
}
